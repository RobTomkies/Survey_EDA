% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NLP_Uni_EDA.R
\name{NLP_Uni_EDA}
\alias{NLP_Uni_EDA}
\title{Exporatory Analysis of Natural Language Data}
\usage{
NLP_Uni_EDA(
  dataset,
  detect = T,
  NLP.force = c(),
  ignore.columns = c(),
  analyse_split_answers = T,
  alternate.nas = list()
)
}
\arguments{
\item{dataset}{dataframe ; containing columns of each field and rows containing each record}

\item{detect}{Boolean ; True or False value on where the user wishes the function to automatically detect additional categorical fields, if false will only use the forced columns}

\item{NLP.force}{vector ; containing the names of the columns (as strings) or indexes of columns, or a combination, that should be forced and analysed as natural language (NLP) data type}

\item{ignore.columns}{vector ; the names of the columns (as strings) or indexes of columns, or a combination, that should be ignored during analysis}

\item{analyse_split_answers}{boolean; true of false as to whether to analyse potentially natuaral language answers within other data type columns such as numeric or categorical}

\item{alternate.nas}{list ; containing vectors for each column you wish to specify alternate/additional NA values for. The first element of each vector should be the name/index of the column you wish to force followed by the additional values in the column that should be considered as NA.}
}
\value{
A list containing one entry for each NLP field analysed. Each entry in the list contains the following analysis:
\itemize{
\item Word_Frequency: dataframe; containing the top 500 most common words and their count
\item Bigrams: dataframe; containing the top 500 most common bigrams (word pairings) from the data and their frequency (order specific)
\item Trigrams: dataframe; containing the top 500 most commonly mentioned trigrams (three words mentioned consecutively) and their counts (order specific)
\item Corr_matrix: dataframe; containing the pearson frequency corrolation for words mentioned in the same response (order non specific)
\item Tf_idf: tibble; containing the word, which response and tf_idf score for the analysis. This analysis works better on longer response answers
\item wordcount: dataframe; contains the word count for each response
\item Sentiments: dataframe; dataframe containing scores for anger, anticipation, disgust, fear, joy, sadness, surprise, trust, negative and positive for each response. This is determined using the NRC sentiment dictionary.
\item intput_name: character; The name of the data field that the analysis refers to.
}
}
\description{
Exporatory Analysis of Natural Language Data
}
\examples{
NLP_Uni_EDA(dataset = example_dataset,
                    detect = T,
                    NLP.force = list(c('col1', 'a','b','c'), c('col2', 2,3,4)),
                    ignore.columns = c('col4'),
                    analyse_split_answers = T,
                    alternate.nas = list(c('col1', 'error'))

NLP_Uni_EDA(example_dataset)

plot(NLP_Uni_EDA(example_dataset))

print(NLP_Uni_EDA(example_dataset))




}
