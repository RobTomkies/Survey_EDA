theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
corrolation_plot,
nrow = 3)
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(input_data$word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none") +
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
corrolation_plot,
nrow = 3)
input_data <- head(x$Word_Frequency, n=10)
input_data <- head(x$Word_Frequency, n=10)
ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(input_data$word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none") +
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(input_data$word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none") +
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
corrolation_plot,
nrow = 3)
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(input_data$word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none") +
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
corrolation_plot,
nrow = 3)
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(input_data$word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none") +
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
#corrolation_plot,
nrow = 2)
input_data <- head(x$Word_Frequency, n=10)
input_data
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(Word1, levels = Word1),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
word_frequency
input_data
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = word1),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
word_frequency
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
#corrolation_plot,
nrow = 2)
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
corrolation_plot,
nrow = 3)
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, sizes = 0.5), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, size = 0.5), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, size = 0.1), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, label.size = 0.1), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, size = 5), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, size = 100), repel = TRUE) +
theme_void()
x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name, size = 0.1), repel = TRUE) +
theme_void()
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
corrolation_plot,
nrow = 3)
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
nrow = 2)
ggarrange(corrolation_plot, nrow = 1)
cor_cut <- 0.2
emotions <- c('anger', 'anticipation', 'disgust', 'fear', 'joy', 'sadness', 'surprise', 'trust', 'negative', 'positive')
sentiment_counts <- sapply(x$Sentiments, sum)
plot_frame <- data.frame(Emotions = emotions, Sentiment_Score = sentiment_counts)
sentiment_summary <- ggplot(plot_frame, aes(x = factor(Emotions, levels = Emotions), y = Sentiment_Score , fill=Sentiment_Score)) +
geom_bar(stat = "identity", color="black")+theme_minimal() +
labs(title="Cumulate Sentiment Score",x="Emotion", y = "Cumulative Score")+ theme(legend.position="none")+
theme(axis.text.x = element_text(angle = 45, hjust=1)) +scale_fill_distiller(palette = "Greens")
input_data <- head(x$Word_Frequency, n=10)
word_frequency <- ggplot(input_data, aes(x = n, y = factor(word1, levels = rev(word1)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Word Frequency (top 10)",x="Count", y = "Word")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Bigrams, n=10) %>%
mutate(Bigram = paste(word1, word2)) %>%
select(Bigram, n)
Bigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Bigram, levels = rev(Bigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Bigram Frequency (top 10)",x="Count", y = "Bigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
input_data <- head(x$Trigrams, n=10) %>%
mutate(Trigram = paste(word1, word2, word3)) %>%
select(Trigram, n)
Trigram_frequency <- ggplot(input_data, aes(x = n, y = factor(Trigram, levels = rev(Trigram)),fill=n)) +
geom_bar(stat = "identity", color="black")+
theme_minimal()+
scale_fill_distiller(palette = "Greens")+
labs(title="Trigram Frequency (top 10)",x="Count", y = "Trigram")+ theme(legend.position="none")+
theme(axis.text.y = element_text(angle = 45, vjust=-1))
corrolation_plot <- x$Corr_matrix %>%
filter(correlation > .2) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(show.legend = FALSE) +
geom_node_point(color = "lightgreen", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()+
labs(title=paste("Corrolation clusters >",cor_cut, sep =""))+ theme(legend.position="none")
ggarrange(ggarrange(sentiment_summary, word_frequency, ncol = 2),
ggarrange(Bigram_frequency, Trigram_frequency, ncol =2),
nrow = 2)
ggarrange(corrolation_plot, nrow = 1)
