pacman::p_load(testthat, devtools, roxygen2, knitr)
load_all()
Data_Describe(basic_test_data)
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
Missingness <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
lbls2 <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE),
widths=c(1.5,1.5), heights=c(1,2))
pie(data_type_table, labels = lbls1,
main="Data Type Proportions")
pie(Missingness, labels = lbls2,
main="Overview of missingness")
}
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
Missingness <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
lbls2 <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE),
heights=c(1,2))
pie(data_type_table, labels = lbls1,
main="Data Type Proportions")
pie(Missingness, labels = lbls2,
main="Overview of missingness")
}
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
Missingness <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
lbls2 <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
pie(data_type_table, labels = lbls1,
main="Data Type Proportions")
pie(Missingness, labels = lbls2,
main="Overview of missingness")
}
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
Missingness <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
lbls2 <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
pie(data_type_table, labels = lbls1,
main="Data Type Proportions")
pie(Missingness, labels = lbls2,
main="Overview of missingness")
pie(Missingness, labels = lbls2,
main="Overview of missingness")
}
load_all()
plot(Data_Describe(basic_test_data))
pacman::p_load(devtools, roxygen2, testthat, knitr)
load_all()
plot(Data_Describe(basic_test_data))
x <- c(1,2,3,4)
y <- c(4,5,3,2,3)
z <- c(2,3,2,3,2,3,2)
pie)x
pie(x)
pie(y)
pie(z)
pie(z)
pie(table(z))
pie(table(y))
g <- c('a', 'b', 'car', 'tree', 'b', 'a' , 'g')
pie(g)
g <- c('a', 'b', 'car', 'tree', 'b', 'a' , 'g')
pie(g)
pie(table(g))
# Pie Chart with Percentages
slices <- table(g)
lbls <- names(table(g))
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Pie Chart of Countries")
typeof(table(g))
table(g)
class(table(g))
table(c(1,2,3,4))
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
pie(temp, lavels = lbls)
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
pie(temp, lavels = lbls)
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
pie(temp, labels = lbls)
pie(table(y))
pie(table(z))
class(table(g))
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
pie(temp, labels = lbls)
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
pie(temp, labels = lbls)
pie(table(y))
pie(table(z))
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
temp <- c(1,2,3,4)
lbls <- c('car', 'tree', 'frar', 'jdhfg')
pie(temp, labels = lbls)
pie(table(y))
pie(table(z))
library(ggplot2)
df = data.frame(temp,
lbls)
ggplot(df, aes(x="", y=x, fill=lbls)) +geom_bar(width = 1, stat = "identity") +
coord_polar("y", start=0) +theme_void()
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
library(tidyr)
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
library(dplyr)
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
data
temp <- c(1,2,3,4,9)
lbls <- c('car', 'tree', 'frar', 'jdhfg', 'carror')
library(dplyr)
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
data
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y")
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y")+
theme_void()
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y")
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +
theme_void()
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y")
ggplot(data, aes(x = "", y = perc, fill = lbls, main = 'plot')) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y")
ggplot(data, aes(x = "", y = perc, fill = lbls, title = 'plot')) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y")
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Trial")
layout(matrix(c(1,1,2,3), 2, 2, byrow = TRUE))
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Trial")
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Trial")
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Trial")
data <- data.frame(temp, lbls) %>%
mutate(perc = `temp` / sum(`temp`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Trial")+
theme_void()
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("    Trial    ")+
theme_void()
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("    Trial    ")
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("    Trial    ")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("    Trial    ")+
theme(plot.title = element_text(hjust = 0.5))+
theme_void()
ggplot(data, aes(x = "", y = perc, fill = lbls)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("    Trial    ")+
theme_void()+
theme(plot.title = element_text(hjust = 0.5))
x <- data.frame(y = c(1,23,4,5,6,7), nam = c('hello', 'name', 'hello', 'name', 'hello', 'tree'))
df_data_type <- x %>%
group_by(`nam`) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
df_data_type
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
df_data_type <- x$data_type_conversion %>%
group_by(`converted type`) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_dtype <- ggplot(df_data_type, aes(x = "", y = perc, fill = `converted type`)) +
geom_col() + theme_void()+
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Data Types Present")+
theme(plot.title = element_text(hjust = 0.5))
counts <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
category <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )
df_missing <- data.frame(counts, category) %>%
mutate(perc = `counts` / sum(`counts`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_missing <- ggplot(df_missing, aes(x = "", y = perc, fill = category)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
theme_void()+
coord_polar(theta = "y") +ggtitle("Missingness of data")+
theme(plot.title = element_text(hjust = 0.5))
ggarrange(p_missing, p_dtype, ncol = 2)
}
plot(Data_Describe(basic_test_data))
install.packages('ggpubr')
library(ggpubr)
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
df_data_type <- x$data_type_conversion %>%
group_by(`converted type`) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_dtype <- ggplot(df_data_type, aes(x = "", y = perc, fill = `converted type`)) +
geom_col() + theme_void()+
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Data Types Present")+
theme(plot.title = element_text(hjust = 0.5))
counts <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
category <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )[]
df_missing <- data.frame(counts, category) %>%
filter(counts > 0)
mutate(perc = `counts` / sum(`counts`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_missing <- ggplot(df_missing, aes(x = "", y = perc, fill = category)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
theme_void()+
coord_polar(theta = "y") +ggtitle("Missingness of data")+
theme(plot.title = element_text(hjust = 0.5))
ggarrange(p_missing, p_dtype, ncol = 2)
}
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
df_data_type <- x$data_type_conversion %>%
group_by(`converted type`) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_dtype <- ggplot(df_data_type, aes(x = "", y = perc, fill = `converted type`)) +
geom_col() + theme_void()+
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Data Types Present")+
theme(plot.title = element_text(hjust = 0.5))
counts <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
category <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )[]
df_missing <- data.frame(counts, category) %>%
filter(counts > 0) %>%
mutate(perc = `counts` / sum(`counts`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_missing <- ggplot(df_missing, aes(x = "", y = perc, fill = category)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
theme_void()+
coord_polar(theta = "y") +ggtitle("Missingness of data")+
theme(plot.title = element_text(hjust = 0.5))
ggarrange(p_missing, p_dtype, ncol = 2)
}
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
df_data_type <- x$data_type_conversion %>%
group_by(`converted type`) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_dtype <- ggplot(df_data_type, aes(x = "", y = perc, fill = `converted type`)) +
geom_col() + #theme_void()+
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Data Types Present")+
theme(plot.title = element_text(hjust = 0.5))
counts <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
category <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )[]
df_missing <- data.frame(counts, category) %>%
filter(counts > 0) %>%
mutate(perc = `counts` / sum(`counts`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_missing <- ggplot(df_missing, aes(x = "", y = perc, fill = category)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
#theme_void()+
coord_polar(theta = "y") +ggtitle("Missingness of data")+
theme(plot.title = element_text(hjust = 0.5))
ggarrange(p_missing, p_dtype, ncol = 2)
}
plot(Data_Describe(basic_test_data))
#' @export
plot.data_describe <- function(x){
x <- unclass(x)
data_type_table <- table(x$data_type_conversion['converted type'])
lbls1 <- paste(names(data_type_table), "\n", data_type_table, sep="")
df_data_type <- x$data_type_conversion %>%
group_by(`converted type`) %>% # Variable to be transformed
count() %>%
ungroup() %>%
mutate(perc = `n` / sum(`n`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_dtype <- ggplot(df_data_type, aes(x = "", y = perc, fill = `converted type`)) +
geom_col() + theme_void()+
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
coord_polar(theta = "y") +ggtitle("Data Types Present")+
theme(plot.title = element_text(hjust = 0.5))
counts <- c(sum(!is.na(x$grouped_missingness['Complete'])),
sum(!is.na(x$grouped_missingness['>0 to 10%'])),
sum(!is.na(x$grouped_missingness['>10 to 25%'])),
sum(!is.na(x$grouped_missingness['>25 to 50%'])),
sum(!is.na(x$grouped_missingness['>50 to 75%'])),
sum(!is.na(x$grouped_missingness['>75%'])))
category <- c('Complete', '>0 to 10%', '>10 to 25%', '>25 to 50%', '>50 to 75%', '>75%' )[]
df_missing <- data.frame(counts, category) %>%
filter(counts > 0) %>%
mutate(perc = `counts` / sum(`counts`)) %>%
arrange(perc) %>%
mutate(labels = scales::percent(perc))
p_missing <- ggplot(df_missing, aes(x = "", y = perc, fill = category)) +
geom_col() +
geom_text(aes(label = labels),
position = position_stack(vjust = 0.5))+
theme_void()+
coord_polar(theta = "y") +ggtitle("Missingness of data")+
theme(plot.title = element_text(hjust = 0.5))
ggarrange(p_missing, p_dtype, ncol = 2)
}
plot(Data_Describe(basic_test_data))
plot(Data_Describe(basic_test_data))
library()$results[,1]
pacman::p_load(devtools, roxygen2, testthat, knitr)
load_all()
plot(Data_Describe(basic_test_data))
plot(Data_Describe(mtcars))
plot(Data_Describe(basic_test_data))
plot(Data_Describe(mtcars))
print(Data_Describe(mtcars))
plot(Data_Describe(mtcars))
