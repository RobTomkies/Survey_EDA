plot(out)
x<- c(1,23,3,4,5,6,2,3,4,32,1,3,4,3, 22, 22, 22, 22, 22)
y<- c(5,4,3,2,3,4,5,6,5,3,2,3,4,5,5,4,3,2,1)
z <- data.frame(x,y)
out <- Categorical_Uni_EDA(z, nominal.force = c('x','y'))
plot(out)
out
z <- data.frame(x,y)
load_all()
out <- Categorical_Uni_EDA(z, nominal.force = c('x','y'))
plot(out)
load_all()
plot(out)
out
load_all()
plot(out)
build()
document
document()
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
z %>% pivot_longer(everything())
z %>% pivot_longer(everything()) %>% group_by(value, name)
z %>% pivot_longer(everything()) %>% group_by(value, name)
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
as.data.frame() %>% filter(name == x)
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
as.data.frame() %>% filter(name == x)
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
as.data.frame() %>% filter(name %in% 'x')
table(z$x)
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
as.data.frame()
row_x <- nrow(z$x)
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n()/,.groups = 'drop') %>%
mutate(prop = n / sum(n)) %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n()/,.groups = 'drop') %>%
mutate(prop = n / sum(n)) %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n()/,.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n()/,.groups = 'drop') %>%
mutate(prop = total_count / sum(n)) %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(n)) %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
as.data.frame()
z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data
data <- data %>%
filter(name == 'x') %>%
add_row(value = 'other', name = 'x', total_count = NA, prop = 1-(sum(prop)))
prop_x <- sum(data %>%
filter(name == 'x') %>%
select(prop))
prop_x
length(z)
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = unique(data$name)[i], total_count = NA, prop = other_prop)
}
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
print(working)
other_prop <- 1 - sum(working$prop)
print(other_prop)
data <- data %>% add_row(value = 'other', name = unique(data$name)[i], total_count = NA, prop = other_prop)
}
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- str(data$value)
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value
str(data$value)
data$value <- toString(data$value)
data
row_x <- nrow(z$x)
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- toString(data$value)
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
data
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
print(working)
other_prop <- 1 - sum(working$prop)
print(other_prop)
data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
#other_prop <- 1 - sum(working$prop)
#data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
#data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = str(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = 'y', total_count = NA, prop = other_prop)
}
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
data
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
rlang::last_error()
load_all()
plot(out)
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
data <- data %>% mutate(label = cumsum(prop))
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
data <- data %>% filter(name == unique(data$name)[i])%>% mutate(label = cumsum(prop))
}
data
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
data <- data %>% filter(name == unique(data$name)[i])%>% mutate(label = cumsum(prop))
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
data <- data %>% filter(name == unique(data$name)[i])%>% mutate(label = cumsum(prop))
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
#data <- data %>% filter(name == unique(data$name)[i])%>% mutate(label = cumsum(prop))
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
data$label <- NA
data
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
data$label <- NA
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)%>%
arrange(prop)
}
data
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
data
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)%>%
arrange(prop)
}
data
#change to rcpp
new_dataframe <- data.frame(matrix(nrow = nrow(data), ncol =ncol(data)+1 ))
new_dataframe
row_count <- 0
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
temp_row <- nrow(working)
working %>% mutate(label = cumsum(prop))
new_dataframe[row_count+1:(row_count + temp_row),] <- working
}
new_dataframe
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)%>%
arrange(prop)
}
#change to rcpp
new_dataframe <- data.frame(matrix(nrow = nrow(data), ncol =ncol(data)+1 ))
row_count <- 0
data
length(unique(data$name))
i = 1
working <- data %>% filter(name == unique(data$name)[i])
working
temp_row <- nrow(working)
temp_row
working %>% mutate(label = cumsum(prop))
working <- working %>% mutate(label = cumsum(prop))
new_dataframe[row_count+1:(row_count + temp_row),] <- working
new_dataframe
row_count <- row_count + temp_row
i = 2
working <- data %>% filter(name == unique(data$name)[i])
working
temp_row <- nrow(working)
temp_row
working <- working %>% mutate(label = cumsum(prop))
working
new_dataframe[row_count+1:(row_count + temp_row),] <- working
row_count <- row_count + temp_row
new_dataframe
working
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)%>%
arrange(prop)
}
#change to rcpp
new_dataframe <- data.frame(matrix(nrow = nrow(data), ncol =ncol(data)+1 ))
row_count <- 0
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
temp_row <- nrow(working)
working <- working %>% mutate(label = cumsum(prop))
new_dataframe[row_count+1:(row_count + temp_row),] <- working
row_count <- row_count + temp_row
}
new_dataframe
i = 2
working <- data %>% filter(name == unique(data$name)[i])
working
temp_row <- nrow(working)
temp_row
working <- working %>% mutate(label = cumsum(prop))
working
working <- working %>% mutate(label = cumsum(prop))
working
new_dataframe[row_count+1:(row_count + temp_row),]
#change to rcpp
new_dataframe <- data.frame(matrix(nrow = nrow(data), ncol =ncol(data)+1 ))
row_count <- 0
i = 1
working <- data %>% filter(name == unique(data$name)[i])
working
new_dataframe
working
temp_row <- nrow(working)
temp_row
working <- working %>% mutate(label = cumsum(prop))
working
new_dataframe[row_count+1:(row_count + temp_row),]
new_dataframe[row_count+1:(row_count + temp_row),] <- working
new_dataframe
row_count <- row_count + temp_row
row_count
i = 2
working <- data %>% filter(name == unique(data$name)[i])
working
temp_row <- nrow(working)
temp_row
working <- working %>% mutate(label = cumsum(prop))
working
row_count+1:(row_count + temp_row)
row_count+1
(row_count + temp_row)
(row_count+1):(row_count + temp_row)
new_dataframe[(row_count+1):(row_count + temp_row),] <- working
new_dataframe
names(new_dataframe) <- names(data)
new_dataframe
names(new_dataframe) <- c(names(data), 'label')
new_dataframe
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
load_all()
plot(out)
data <- z %>% pivot_longer(everything()) %>% group_by(value, name)%>%
summarise(total_count=n(),.groups = 'drop') %>%
mutate(prop = total_count / sum(total_count)) %>%
filter(prop >= 0.05)%>%
as.data.frame()
data$value <- as.character(data$value)
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
other_prop <- 1 - sum(working$prop)
data <- data %>% add_row(value = 'other', name = as.character(unique(data$name)[i]), total_count = NA, prop = other_prop)%>%
arrange(prop)
}
#change to rcpp
new_dataframe <- data.frame(matrix(nrow = nrow(data), ncol =ncol(data)+1 ))
names(new_dataframe) <- c(names(data), 'label')
row_count <- 0
for(i in 1:length(unique(data$name))){
working <- data %>% filter(name == unique(data$name)[i])
temp_row <- nrow(working)
working <- working %>% mutate(label = cumsum(prop))
new_dataframe[(row_count+1):(row_count + temp_row),] <- working
row_count <- row_count + temp_row
}
new_dataframe
load_all()
plot(out)
plot(out)
load_all()
plot(out)
load_all()
plot(out)
print(out)
