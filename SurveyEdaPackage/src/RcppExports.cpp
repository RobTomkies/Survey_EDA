// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RCPPColMean
NumericVector RCPPColMean(NumericMatrix x);
RcppExport SEXP _SurveyEdaPackage_RCPPColMean(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPColMean(x));
    return rcpp_result_gen;
END_RCPP
}
// RCPPColMedian
NumericVector RCPPColMedian(NumericMatrix x);
RcppExport SEXP _SurveyEdaPackage_RCPPColMedian(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPColMedian(x));
    return rcpp_result_gen;
END_RCPP
}
// RCPPColSD
NumericVector RCPPColSD(NumericMatrix x);
RcppExport SEXP _SurveyEdaPackage_RCPPColSD(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPColSD(x));
    return rcpp_result_gen;
END_RCPP
}
// RCPPColMax
NumericVector RCPPColMax(NumericMatrix x);
RcppExport SEXP _SurveyEdaPackage_RCPPColMax(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPColMax(x));
    return rcpp_result_gen;
END_RCPP
}
// RCPPColMin
NumericVector RCPPColMin(NumericMatrix x);
RcppExport SEXP _SurveyEdaPackage_RCPPColMin(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPColMin(x));
    return rcpp_result_gen;
END_RCPP
}
// RCPPColSkew
NumericVector RCPPColSkew(NumericMatrix x);
RcppExport SEXP _SurveyEdaPackage_RCPPColSkew(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(RCPPColSkew(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SurveyEdaPackage_RCPPColMean", (DL_FUNC) &_SurveyEdaPackage_RCPPColMean, 1},
    {"_SurveyEdaPackage_RCPPColMedian", (DL_FUNC) &_SurveyEdaPackage_RCPPColMedian, 1},
    {"_SurveyEdaPackage_RCPPColSD", (DL_FUNC) &_SurveyEdaPackage_RCPPColSD, 1},
    {"_SurveyEdaPackage_RCPPColMax", (DL_FUNC) &_SurveyEdaPackage_RCPPColMax, 1},
    {"_SurveyEdaPackage_RCPPColMin", (DL_FUNC) &_SurveyEdaPackage_RCPPColMin, 1},
    {"_SurveyEdaPackage_RCPPColSkew", (DL_FUNC) &_SurveyEdaPackage_RCPPColSkew, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_SurveyEdaPackage(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
